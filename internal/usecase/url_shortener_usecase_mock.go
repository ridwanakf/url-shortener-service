// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ridwanakf/url-shortener-service/internal (interfaces: ShortenerUC)

// Package usecase is a generated GoMock package.
package usecase

import (
	gomock "github.com/golang/mock/gomock"
	entity "github.com/ridwanakf/url-shortener-service/internal/entity"
	reflect "reflect"
)

// MockShortenerUC is a mock of ShortenerUC interface
type MockShortenerUC struct {
	ctrl     *gomock.Controller
	recorder *MockShortenerUCMockRecorder
}

// MockShortenerUCMockRecorder is the mock recorder for MockShortenerUC
type MockShortenerUCMockRecorder struct {
	mock *MockShortenerUC
}

// NewMockShortenerUC creates a new mock instance
func NewMockShortenerUC(ctrl *gomock.Controller) *MockShortenerUC {
	mock := &MockShortenerUC{ctrl: ctrl}
	mock.recorder = &MockShortenerUCMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockShortenerUC) EXPECT() *MockShortenerUCMockRecorder {
	return m.recorder
}

// CreateNewCustomShortURL mocks base method
func (m *MockShortenerUC) CreateNewCustomShortURL(arg0, arg1 string) (entity.URL, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateNewCustomShortURL", arg0, arg1)
	ret0, _ := ret[0].(entity.URL)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateNewCustomShortURL indicates an expected call of CreateNewCustomShortURL
func (mr *MockShortenerUCMockRecorder) CreateNewCustomShortURL(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateNewCustomShortURL", reflect.TypeOf((*MockShortenerUC)(nil).CreateNewCustomShortURL), arg0, arg1)
}

// CreateNewShortURL mocks base method
func (m *MockShortenerUC) CreateNewShortURL(arg0 string) (entity.URL, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateNewShortURL", arg0)
	ret0, _ := ret[0].(entity.URL)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateNewShortURL indicates an expected call of CreateNewShortURL
func (mr *MockShortenerUCMockRecorder) CreateNewShortURL(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateNewShortURL", reflect.TypeOf((*MockShortenerUC)(nil).CreateNewShortURL), arg0)
}

// DeleteURL mocks base method
func (m *MockShortenerUC) DeleteURL(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteURL", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteURL indicates an expected call of DeleteURL
func (mr *MockShortenerUCMockRecorder) DeleteURL(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteURL", reflect.TypeOf((*MockShortenerUC)(nil).DeleteURL), arg0)
}

// GenerateShortURL mocks base method
func (m *MockShortenerUC) GenerateShortURL(arg0 int) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateShortURL", arg0)
	ret0, _ := ret[0].(string)
	return ret0
}

// GenerateShortURL indicates an expected call of GenerateShortURL
func (mr *MockShortenerUCMockRecorder) GenerateShortURL(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateShortURL", reflect.TypeOf((*MockShortenerUC)(nil).GenerateShortURL), arg0)
}

// GetAllURL mocks base method
func (m *MockShortenerUC) GetAllURL(arg0 string) ([]entity.URL, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllURL", arg0)
	ret0, _ := ret[0].([]entity.URL)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllURL indicates an expected call of GetAllURL
func (mr *MockShortenerUCMockRecorder) GetAllURL(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllURL", reflect.TypeOf((*MockShortenerUC)(nil).GetAllURL), arg0)
}

// GetLongURL mocks base method
func (m *MockShortenerUC) GetLongURL(arg0 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLongURL", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLongURL indicates an expected call of GetLongURL
func (mr *MockShortenerUCMockRecorder) GetLongURL(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLongURL", reflect.TypeOf((*MockShortenerUC)(nil).GetLongURL), arg0)
}

// IsValidURL mocks base method
func (m *MockShortenerUC) IsValidURL(arg0 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IsValidURL", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// IsValidURL indicates an expected call of IsValidURL
func (mr *MockShortenerUCMockRecorder) IsValidURL(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsValidURL", reflect.TypeOf((*MockShortenerUC)(nil).IsValidURL), arg0)
}

// UpdateShortURL mocks base method
func (m *MockShortenerUC) UpdateShortURL(arg0, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateShortURL", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateShortURL indicates an expected call of UpdateShortURL
func (mr *MockShortenerUCMockRecorder) UpdateShortURL(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateShortURL", reflect.TypeOf((*MockShortenerUC)(nil).UpdateShortURL), arg0, arg1)
}
